<<<<<<< HEAD
# Generated by Django 5.2.4 on 2025-08-03 11:41
=======
# Generated by Django 5.2.3 on 2025-07-12 09:43
>>>>>>> ef3b54f1f415335853a547d2bc42f824ce55242c

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('email', models.EmailField(error_messages={'unique': 'Пользователь с таким email уже существует'}, max_length=254, unique=True, verbose_name='Email address')),
                ('username', models.CharField(max_length=50, unique=True, verbose_name='Логин')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='Фамилия')),
                ('gender', models.CharField(choices=[('M', 'Мужской'), ('F', 'Женский')], default=None, max_length=1, verbose_name='Пол')),
                ('avatar', models.ImageField(blank=True, default='avatars/default.jpg', null=True, upload_to='avatars/', verbose_name='Аватар')),
                ('email_confirmed', models.BooleanField(default=False, verbose_name='Email подтвержден')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['-created_at'],
                'swappable': 'AUTH_USER_MODEL',
            },
        ),
    ]
